{"version":3,"sources":["shared/FlatButton.tsx","App.tsx","routes/Drawer.tsx","screens/About.tsx","screens/Home.tsx","screens/HomeComponents/SearchForm.tsx","screens/HomeComponents/Dictionary.tsx","screens/HomeComponents/Phonetics.tsx","screens/HomeComponents/Listen.tsx","screens/HomeComponents/PartOfSpeech.tsx","screens/HomeComponents/Definitions.tsx","screens/HomeComponents/Pictures.tsx"],"names":["text","onPress","TouchableOpacity","activeOpacity","View","style","styles","button","Text","buttonText","StyleSheet","create","borderRadius","flex","paddingHorizontal","paddingVertical","backgroundColor","marginHorizontal","container","alignItems","justifyContent","Drawer","createDrawerNavigator","NavigationContainer","Navigator","initialRouteName","Screen","name","component","Home","About","width","alignSelf","marginTop","useState","keyword","setKeyword","useFonts","Inter_200ExtraLight","Inter_300Light","Inter_500Medium","ScrollView","header","SearchForm","handleSubmit","value","ActivityIndicator","size","color","padding","fontFamily","fontSize","props","Formik","initialValues","onSubmit","values","resetForm","test","alert","handleChange","handleBlur","form","TextInput","placeholder","onChangeText","onBlur","input","FlatButton","marginVertical","flexDirection","borderWidth","borderColor","word","setWord","isLoading","setIsLoading","handleResponse","response","data","useEffect","apiUrl","axios","get","then","catch","error","phonetic","wordWrapper","transcription","phonetics","meanings","fontWeight","textTransform","fontStyle","accentWrapper","map","el","audio","accent","key","accentCountry","slice","sound","setSound","Audio","Sound","createAsync","uri","shouldPlay","playAsync","unloadAsync","undefined","meaning","uid","partOfSpeech","definitions","definition","index","definitionWrapper","example","pictures","setPictures","showPictures","photos","pexelsApisUrl","headers","Authorization","console","imageWrapper","picture","shadow","Image","source","src","landscape","image","paddingBottom","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","resizeMode"],"mappings":"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","file":"static/js/app.17e3d405.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  TouchableOpacity,\n  Text,\n  View,\n  GestureResponderEvent,\n} from \"react-native\";\n\ninterface Props {\n  text: string;\n  onPress: (event: GestureResponderEvent) => void;\n}\nexport const FlatButton: React.FC<Props> = ({ text, onPress }) => (\n  <TouchableOpacity onPress={onPress} activeOpacity={0.8}>\n    <View style={styles.button}>\n      <Text style={styles.buttonText}>{text}</Text>\n    </View>\n  </TouchableOpacity>\n);\n\nconst styles = StyleSheet.create({\n  button: {\n    borderRadius: 10,\n    flex: 1,\n    paddingHorizontal: 15,\n    paddingVertical: 8,\n    backgroundColor: \"#BEDBDB\",\n    marginHorizontal: 10,\n  },\n  buttonText: {},\n});\n","import React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport Navigator from \"./routes/Drawer\";\n\nexport default function App() {\n  return <Navigator />;\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import React from \"react\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { About } from \"../screens/About\";\nimport { Home } from \"../screens/Home\";\n\nconst Drawer = createDrawerNavigator();\n\nconst RootDrawer = () => {\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator initialRouteName=\"Home\">\n        <Drawer.Screen name=\"Home\" component={Home} />\n        <Drawer.Screen name=\"About\" component={About} />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n};\nexport default RootDrawer;\n","import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\n\nexport const About = () => {\n  return (\n    <View style={styles.container}>\n      <Text>\n        Dictionary application was developed by Anastasiia Yershova to search\n        for words' definitions and see examples of using it.\n      </Text>\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    width: \"90%\",\n    alignSelf: \"center\",\n    marginTop: 30,\n  },\n});\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { ScrollView, Text, StyleSheet, ActivityIndicator } from \"react-native\";\nimport {\n  useFonts,\n  Inter_200ExtraLight,\n  Inter_300Light,\n  Inter_500Medium,\n} from \"@expo-google-fonts/inter\";\nimport { SearchForm } from \"./HomeComponents/SearchForm\";\nimport Dictionary from \"./HomeComponents/Dictionary\";\n\nexport const Home = () => {\n  const [keyword, setKeyword] = useState<String | null>(null);\n  const [fontsLoaded] = useFonts({\n    Inter_200ExtraLight,\n    Inter_300Light,\n    Inter_500Medium,\n  });\n  const handleSubmit = (value: String) => {\n    setKeyword(value);\n  };\n  if (fontsLoaded) {\n    return (\n      <ScrollView style={styles.container}>\n        <Text style={[styles.header]}>\n          What word would you like to look up?\n        </Text>\n        <SearchForm handleSubmit={handleSubmit} />\n        {keyword != null && <Dictionary keyword={keyword} />}\n      </ScrollView>\n    );\n  } else return <ActivityIndicator size=\"large\" color=\"#BEDBDB\" />;\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 15,\n    backgroundColor: \"#ECF8F8\",\n  },\n  header: {\n    alignSelf: \"center\",\n    fontFamily: \"Inter_500Medium\",\n    fontSize: 18,\n  },\n});\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport {\n  View,\n  TextInput,\n  StyleSheet,\n  GestureResponderEvent,\n} from \"react-native\";\nimport { FlatButton } from \"../../shared/FlatButton\";\n\nexport const SearchForm = (props: { handleSubmit: (arg0: string) => void }) => (\n  <Formik\n    initialValues={{ keyword: \"\" }}\n    onSubmit={(values, { resetForm }) => {\n      values.keyword !== \"\" && /^[a-zA-Z-\\s]*$/.test(values.keyword)\n        ? props.handleSubmit(values.keyword)\n        : alert(\"Only latin letters, dash and space are allowed\");\n      resetForm();\n    }}\n  >\n    {({ handleChange, handleBlur, handleSubmit, values }) => (\n      <View style={styles.form}>\n        <TextInput\n          placeholder=\"Start typing..\"\n          onChangeText={handleChange(\"keyword\")}\n          onBlur={handleBlur(\"keyword\")}\n          value={values.keyword}\n          style={styles.input}\n        />\n        <FlatButton\n          text=\"Submit\"\n          onPress={\n            handleSubmit as unknown as (event: GestureResponderEvent) => void\n          }\n        />\n      </View>\n    )}\n  </Formik>\n);\nconst styles = StyleSheet.create({\n  form: {\n    marginVertical: 10,\n    flexDirection: \"row\",\n    alignSelf: \"center\",\n  },\n  input: {\n    flex: 1,\n    borderWidth: 3,\n    borderColor: \"#BEDBDB\",\n    borderRadius: 10,\n    paddingHorizontal: 10,\n  },\n});\n","import React, { useState, useEffect } from \"react\";\nimport { ActivityIndicator, View, Text, StyleSheet } from \"react-native\";\nimport axios from \"axios\";\n\nimport Phonetics from \"./Phonetics\";\nimport PartOfSpeech from \"./PartOfSpeech\";\nimport Pictures from \"./Pictures\";\n\ninterface Word {\n  phonetic: String;\n  word: String;\n  phonetics: [];\n  meanings: [];\n}\n\nconst Dictionary = (props: { keyword: String }) => {\n  const [word, setWord] = useState<Word | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const handleResponse = (response: { data: Word[] }) => {\n    setWord(response.data[0]);\n  };\n  useEffect(() => {\n    setIsLoading(true);\n    const apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en/${props.keyword}`;\n    axios\n      .get(apiUrl)\n      .then(handleResponse)\n      .catch((error: Error) => {\n        alert(\"Please enter a valid word\");\n        return error;\n      });\n  }, [props.keyword]);\n  useEffect(() => {\n    word && setIsLoading(false);\n  }, [word]);\n  if (!isLoading && word) {\n    return (\n      <View>\n        {word.phonetic && (\n          <View style={styles.wordWrapper}>\n            <Text style={styles.word}>{word.word}</Text>\n            <Text style={styles.transcription}>{word.phonetic}</Text>\n          </View>\n        )}\n        {word.phonetics && <Phonetics data={word.phonetics} />}\n        {word.meanings && <PartOfSpeech meanings={word.meanings} />}\n        <Pictures keyword={props.keyword} />\n      </View>\n    );\n  } else return <ActivityIndicator size=\"large\" color=\"#BEDBDB\" />;\n};\n\nexport default Dictionary;\n\nconst styles = StyleSheet.create({\n  wordWrapper: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: 5,\n  },\n  word: {\n    fontWeight: \"bold\",\n    fontSize: 18,\n    textTransform: \"capitalize\",\n  },\n  transcription: {\n    fontStyle: \"italic\",\n    fontSize: 16,\n    marginHorizontal: 10,\n  },\n});\n","import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\n\nimport Listen from \"./Listen\";\n\ninterface Props {\n  data: { audio: string }[];\n}\n\nconst Phonetics: React.FC<Props> = ({ data }) => {\n  return (\n    <View style={styles.accentWrapper}>\n      {data.map(\n        (el) =>\n          el.audio !== \"\" && (\n            <View style={styles.accent} key={el.audio}>\n              <Text style={styles.accentCountry}>\n                {el.audio.slice(0, -4).slice(-2)}\n              </Text>\n              <Listen audio={el.audio} />\n            </View>\n          )\n      )}\n    </View>\n  );\n};\nexport default Phonetics;\n\nconst styles = StyleSheet.create({\n  accentWrapper: {\n    flexDirection: \"row\",\n    flex: 1,\n    alignSelf: \"center\",\n    marginTop: 5,\n  },\n  accent: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginHorizontal: 5,\n  },\n  accentCountry: {\n    textTransform: \"uppercase\",\n    fontFamily: \"Inter_300Light\",\n    fontSize: 16,\n  },\n});\n","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Button, StyleSheet } from \"react-native\";\nimport { Audio } from \"expo-av\";\nimport { Sound } from \"expo-av/build/Audio\";\nimport { FlatButton } from \"../../shared/FlatButton\";\n\nconst Listen = (props: { audio: string }) => {\n  const [sound, setSound] = useState<Sound | undefined>();\n  async function playSound() {\n    //loading sound\n    const { sound } = await Audio.Sound.createAsync(\n      { uri: props.audio },\n      { shouldPlay: true }\n    );\n    setSound(sound);\n    //playing sound\n    await sound.playAsync();\n  }\n\n  useEffect(() => {\n    return sound\n      ? () => {\n          //unloading sound\n          sound.unloadAsync();\n        }\n      : undefined;\n  }, [sound]);\n\n  return <FlatButton text=\"Listen\" onPress={playSound} />;\n};\nexport default Listen;\n","import React from \"react\";\nimport { uid } from \"uid\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport Definitions from \"./Definitions\";\n\ninterface Props {\n  meanings: { partOfSpeech: string; definitions: [] }[];\n}\n\nconst PartOfSpeach = (props: Props) => (\n  <>\n    {props.meanings.map((meaning) => (\n      <View key={uid()}>\n        <Text style={styles.partOfSpeech}>{meaning.partOfSpeech}</Text>\n        <Definitions definitions={meaning.definitions} />\n      </View>\n    ))}\n  </>\n);\n\nexport default PartOfSpeach;\n\nconst styles = StyleSheet.create({\n  partOfSpeech: {\n    marginVertical: 10,\n    fontFamily: \"Inter_500Medium\",\n    fontSize: 16,\n    textTransform: \"capitalize\",\n  },\n});\n","import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport { uid } from \"uid\";\n\ninterface Props {\n  definitions: { definition: string; example: string }[];\n}\nconst Definitions = (props: Props) => (\n  <>\n    {props.definitions.map((definition, index) => (\n      <View key={uid()} style={styles.definitionWrapper}>\n        <Text style={styles.definition}>\n          {index + 1}. {definition.definition}\n        </Text>\n        {definition.example && (\n          <Text style={styles.example}>e.g. {definition.example}</Text>\n        )}\n      </View>\n    ))}\n  </>\n);\nexport default Definitions;\n\nconst styles = StyleSheet.create({\n  definitionWrapper: {\n    marginVertical: 2,\n  },\n  definition: {\n    fontFamily: \"Inter_300Light\",\n  },\n  example: {\n    marginVertical: 2,\n    fontSize: 12,\n    fontFamily: \"Inter_200ExtraLight\",\n  },\n});\n","import React, { useState, useEffect } from \"react\";\nimport { uid } from \"uid\";\nimport { ActivityIndicator, View, Image, StyleSheet } from \"react-native\";\nimport axios from \"axios\";\nimport { PEXELS_API_KEY } from \"@env\";\n\ninterface Pictures {\n  src: { landscape: string };\n}\n\nconst Pictures = (props: { keyword: String }) => {\n  const [pictures, setPictures] = useState<Pictures[] | null>(null);\n  const showPictures = (response: { data: { photos: [] } }) => {\n    setPictures(response.data.photos);\n  };\n  useEffect(() => {\n    const pexelsApisUrl = `https://api.pexels.com/v1/search?query=${props.keyword}&per_page=2`;\n    axios\n      .get(pexelsApisUrl, {\n        headers: {\n          Authorization: `Bearer ${PEXELS_API_KEY}`,\n        },\n      })\n      .then(showPictures)\n      .catch((error) => {\n        console.error(\"error while loading pictures\");\n        return error;\n      });\n  }, [props.keyword]);\n  if (pictures) {\n    return (\n      <View style={styles.imageWrapper}>\n        {pictures.map((picture) => (\n          <View key={uid()} style={styles.shadow}>\n            <Image\n              source={{\n                uri: picture.src.landscape,\n              }}\n              style={styles.image}\n            />\n          </View>\n        ))}\n      </View>\n    );\n  } else return <ActivityIndicator size=\"large\" color=\"#BEDBDB\" />;\n};\nexport default Pictures;\n\nconst styles = StyleSheet.create({\n  imageWrapper: {\n    paddingBottom: 60,\n    flex: 1,\n    flexDirection: \"row\",\n    alignSelf: \"center\",\n  },\n  shadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n\n    elevation: 3,\n  },\n  image: {\n    resizeMode: \"cover\",\n    width: 150,\n    height: 150,\n    borderRadius: 20,\n    marginTop: 10,\n    marginHorizontal: 10,\n    borderColor: \"#BEDBDB\",\n    borderWidth: 5,\n  },\n});\n"],"sourceRoot":""}